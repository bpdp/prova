apply plugin: 'java'
apply plugin: 'maven'

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {

    flatDir {
        dirs 'lib'
    }

    mavenLocal()
    mavenCentral()

	// JBoss 
	maven { url 'https://repository.jboss.org/nexus/content/repositories/thirdparty-releases' }

	// Aduna - Sesame
	maven { url 'http://repo.aduna-software.org/maven2/releases' }

}

dependencies {

    //  compile => for compile time deps
    //  testCompile => for test time deps
    //  provided => assumed to be provided by users

	// Apache
	compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.0'
 	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
	compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.2'
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.4.1'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.3'

	// ANTLR -> put jar inside .lib, see repositories - FlatDir above
 	compile group: 'org.antlr', name: 'antlr4-complete', version: '4.5'

	// Sesame 
 	compile group: 'org.openrdf.sesame', name: 'sesame-runtime-osgi', version: '2.7.15'
	compile group: 'org.openrdf.sesame', name: 'sesame-repository-api', version: '2.7.15'
	compile group: 'org.openrdf.sesame', name: 'sesame-repository-http', version: '2.7.15'
	compile group: 'org.openrdf.sesame', name: 'sesame-queryresultio-sparqlxml', version: '2.7.15'
	compile group: 'org.openrdf.sesame', name: 'sesame-queryparser-sparql', version: '2.7.15'
	compile group: 'org.openrdf.sesame', name: 'sesame-queryresultio-api', version: '2.7.15'
	compile group: 'org.openrdf.sesame', name: 'sesame-queryresultio-sparqljson', version: '2.7.15'
	compile group: 'org.openrdf.sesame', name: 'sesame-queryresultio-binary', version: '2.7.15'
	compile group: 'org.openrdf.sesame', name: 'sesame-util', version: '2.7.15'

	testCompile group: 'junit', name: 'junit', version: '4.12'

}

test {
    /* Configure which tests are included
    include 'org/foo/**'
    exclude 'org/boo/**'
    */
	include 'src/test/java'
    maxParallelForks = 5
    maxHeapSize = '1024m'

}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java","src/main/antlr","src/semanticweb/java"]
        }
        resources {
            srcDirs = ["src/main/resources","src/test/resources"]
        }
    }
}

// We don't want javadoc to be examined
if (JavaVersion.current().isJava8Compatible()) {
	allprojects {
		tasks.withType(Javadoc) {
			options.addStringOption('Xdoclint:none', '-quiet')
		}
	}
}

configure(install.repositories.mavenInstaller) {
    pom.project {
        groupId 'ws.prova'
        artifactId 'ws.prova.compact'
        inceptionYear '2014'
        packaging 'jar'
        licenses {
            license {
                name 'Apache License (Version 2.0)'
                url 'http://www.apache.org/licenses/LICENSE-2.0'
                distribution 'repo'
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

// copy all needed jar after gradle build
task copyToLib(type: Copy) {
	into "lib"
	from configurations.runtime
}
